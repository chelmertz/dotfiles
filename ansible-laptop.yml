---
# to apply (alias defined in .bashrc): $ apply-ansible
#
# help for snaps: https://docs.ansible.com/ansible/latest/modules/snap_module.html


# as root
- hosts: localhost
  become: yes
  tasks:

    - name: glances, htop-like
      apt:
        name: glances

    - name: meld, for merging conflicts
      apt:
        name: meld

    - name: git (latest version)
      apt_repository:
        repo: ppa:git-core/ppa

    - name: git
      apt:
        update_cache: yes
        name: git

    - name: gdu ppa (du/ncdu alternative)
      apt_repository:
        repo: ppa:daniel-milde/gdu
        codename: focal # groovy (20.10) is not yet supported

    - name: gdu (du/ncdu alternative)
      apt:
        update_cache: yes
        name: gdu

    - name: emacs repo
      apt_repository:
        repo: ppa:kelleyk/emacs
        codename: focal # groovy (20.10) is not yet supported

    - name: emacs
      apt:
        update_cache: yes
        name: emacs27

    - name: cloc, counts lines of code by language
      apt:
        name: cloc

    - name: simplescreenrecorder
      apt:
        name: simplescreenrecorder

    - name: screenkey (displays pressed buttons on screen)
      apt:
        name: screenkey

    - name: gron (makes json greppable)
      snap:
        name: gron

    - name: spotify
      snap:
        name: spotify

    - name: vlc (video player)
      snap:
        name: vlc

    - name: shellcheck
      snap:
        name: shellcheck
        channel: edge

    - name: ripgrep
      snap:
        name: ripgrep
        classic: yes

    - name: slack
      snap:
        name: slack
        classic: yes

    - name: btop (htop alternative)
      snap:
        name: btop

    - name: cheese (record photo/video with webcam)
      apt:
        name: cheese

    - name: copyq (clipboard manager)
      apt:
        name: copyq

    - name: jhead (exif extraction from photos)
      apt:
        name: jhead

    - name: pavucontrol (ubuntu sucks at choosing output device when headset/bluetooth devices are connected, this is the solution)
      apt:
        name: pavucontrol

    - name: yad (dialogs in GTK launched through CLI, like zenity)
      apt:
        name: yad

    - name: font awesome
      apt:
        name: fonts-font-awesome

    - name: entr (execute command when files change)
      apt:
        name: entr

    - name: playerctl (media player, lets i3blocks query spotify for current song)
      apt:
        name: playerctl

    - name: jq (parse json, mostly a dep, I use gron more often)
      apt:
        name: jq

    - name: Deps for dunstify, see https://github.com/dunst-project/dunst/wiki/Dependencies
      apt:
        pkg:
          - libdbus-1-dev
          - libx11-dev
          - libxinerama-dev
          - libxrandr-dev
          - libxss-dev
          - libglib2.0-dev
          - libpango1.0-dev
          - libgtk-3-dev
          - libxdg-basedir-dev
          - libnotify-dev

    - name: surfraw (shortcut for searching a bunch of search engines)
      apt:
        name: surfraw

    - name: arandr (gui for xrandr, manage monitors & output)
      apt:
        name: arandr

    - name: autorandr (udev rules + small cli config for detecting monitors being attached/detached)
      apt:
        name: autorandr

    - name: brightnessctl (brightness via cli)
      apt:
        name: brightnessctl

    - name: add myself to the video group (for brightnessctl without sudo)
      user:
        name: ch
        groups: video
        append: yes

    - name: sqlitebrowser
      apt:
        name: sqlitebrowser

    - name: pv (progress bar for pipes)
      apt:
        name: pv

    - name: i3
      apt:
        name: i3

    - name: i3blocks
      apt:
        name: i3blocks

    - name: htop
      apt:
        name: htop

    - name: xcape (bind keys, depending on time pressed)
      apt:
        name: xcape

    - name: rofi (dmenu like autocompleting menu GUI thing)
      apt:
        name: rofi

    - name: flameshot (screenshot)
      apt:
        name: flameshot

    - name: xclip (clipboard)
      apt:
        name: xclip

    - name: xsel (clipboard)
      apt:
        name: xsel

    # begin docker
    - name: docker pre-reqs
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release

    - name: docker gpg key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: docker repo
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu groovy stable

    - name: docker packages
      apt:
        update_cache: yes
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose

    - name: add myself to the docker group
      user:
        name: ch
        groups: docker
        append: yes

    # end docker

    # begin gh (github cli)
    - name: github gpg key
      apt_key:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg

    - name: github apt repo
      apt_repository:
        repo: deb [arch=amd64] https://cli.github.com/packages stable main

    - name: gh (github cli)
      apt:
        update_cache: yes
        pkg:
          - gh
    # end gh

    - name: xdotool (api for X, kinda)
      apt:
        name: xdotool

    - name: nodejs
      apt:
        name: nodejs

    - name: yarnpkg (npm alternative, handles javascript builds)
      apt:
        name: yarnpkg

    - name: Symlink yarn
      file:
        src: /usr/bin/yarnpkg
        dest: /usr/bin/yarn
        state: link

    - name: sqlite3
      apt:
        name: sqlite3

    - name: node-gyp (enables bindings for nodejs)
      when: "'eta' in inventory_hostname"
      apt:
        name: node-gyp

    - name: java
      apt:
        pkg:
          - openjdk-11-jre # java
          - openjdk-11-jdk-headless # for `jps`

    - name: psql etc
      when: "'eta' in inventory_hostname"
      apt:
        name: postgresql-client-12

    - name: gimp (photoshopping)
      apt:
        name: gimp

    - name: inkscape (illustrator, vector)
      apt:
        name: inkscape

    - name: tree
      apt:
        name: tree

    - name: libreoffice
      apt:
        name: libreoffice

    - name: php-cli (for the datedate script in my dotfiles/bin)
      apt:
        name: php-cli

    - name: redshift (night screen)
      apt:
        name: redshift

    - name: figlet (large text in terminals, good for WARNING TEXTS etc)
      apt:
        name: figlet

    - name: wmctrl (manage x windows through cli)
      apt:
        name: wmctrl

    - name: tidy (formats html/xml, used when exporting org mode to html)
      apt:
        name: tidy

    - name: amqp-tools (amqp-publish etc that lets you publish to rabbitmq)
      when: "'eta' in inventory_hostname"
      apt:
        name: amqp-tools

    - name: ncdu (interactive & visual alternative to du)
      apt:
        name: ncdu

    - name: postgresql-devel (needed for pgcli)
      apt:
        name: libpq-dev

    - name: nmap
      apt:
        name: nmap

    - name: pandoc & markdown-to-pdf (yes, my cv is so original)
      apt:
        pkg:
          - pandoc
          - texlive-latex-recommended

    - name: graphviz (dot et al.)
      apt:
        name: graphviz

    - name: cargo (rust package manager)
      apt:
        name: cargo

    - name: caffeine (keep the display/system alive and non-idle)
      apt:
        name: caffeine

    - name: zsh
      apt:
        name: zsh

    - name: visidata (csv tui)
      apt:
        name: visidata

- hosts: localhost
  # requires $ ansible-galaxy install staticdev.signal
  roles:
    - role: staticdev.signal

# as user
- hosts: localhost
  tasks:

    - name: black (python formatting)
      pip:
        name: black
        extra_args: --user

    - name: gh extension list
      command: gh extension list
      register: gh_extension_list

    - name: gh-notify (github cli extension for notifications)
      when: gh_extension_list.stdout.find('meiji163/gh-notify') == -1
      shell: gh extension install meiji163/gh-notify

    - name: pgcli (more autocompleting (suggestions & joins) & colors than psql)
      when: "'eta' in inventory_hostname"
      pip:
        name: pgcli
        extra_args: --user

    - name: git-filter-repo (rewriting git repo history, useful when extracting parts of repo to new repo)
      pip:
        name: git-filter-repo
        extra_args: --user

    - name: Symlink dotfiles/bin to ~/bin
      file:
        src: ~/code/github/chelmertz/dotfiles/bin
        dest: ~/bin
        state: link

    - name: Symlink .bashrc
      file:
        src: ~/code/github/chelmertz/dotfiles/.bashrc
        dest: ~/.bashrc
        state: link

    - name: Symlink .zshrc
      file:
        src: ~/code/github/chelmertz/dotfiles/.zshrc
        dest: ~/.zshrc
        state: link

    - name: Symlink dunstrc (notification daemon settings)
      file:
        src: ~/code/github/chelmertz/dotfiles/dunst
        dest: ~/.config/dunst
        state: link

    - name: Global gitignore file
      file:
        src: ~/dotfiles/.gitignore_global
        dest: ~/.gitignore_global
        state: link

    - name: Global gitconfig file (includeIf handles work stuff)
      file:
        src: ~/dotfiles/.gitconfig
        dest: ~/.gitconfig
        state: link

    - name: Global gitconfig file (includeIf handles work stuff)
      file:
        src: ~/dotfiles/.gitconfig
        dest: ~/.gitconfig
        state: link

    - name: i3blocks, status bar for i3
      file:
        src: ~/dotfiles/.i3blocks.conf
        dest: ~/.i3blocks.conf
        state: link

    - name: Symlink i3 settings
      file:
        src: ~/dotfiles/.i3/config
        dest: ~/.config/i3/config
        state: link

    - name: rofi-blah-blah (snippet manager)
      git:
        repo: https://github.com/chelmertz/rofi-blah-blah
        version: master
        dest: ~/code/github/chelmertz/rofi-blah-blah/

    - name: Clone z (autojump for bash)
      git:
        repo: https://github.com/rupa/z.git
        version: master
        dest: ~/code/github/rupa/z/

    # doom emacs begin
    - name: Clone doom emacs (a nice emacs "distribution"(?))
      git:
        repo: https://github.com/hlissner/doom-emacs.git
        #depth: 1
        dest: ~/.emacs.d
        # now, add ~/.emacs.d/bin to PATH and $ doom install

    - name: Remove default config
      shell: rm -rf ~/.doom.d

    - name: Use my doom emacs config
      file:
        src: ~/dotfiles/.doom.d
        dest: ~/.doom.d
        state: link

    # doom emacs end

    - name: Clone grasp (org capture web pages)
      git:
        repo: https://github.com/karlicoss/grasp
        version: master
        dest: ~/code/github/karlicoss/grasp

    - name: Clone powerlevel10k (zsh prompt)
      git:
        repo: https://github.com/romkatv/powerlevel10k
        dest: ~/github/romkatv/powerlevel10k
        depth: 1

    - name: Install powerlevel10k into zshrc
      ansible.builtin.lineinfile:
        path: ~/.zshrc
        line: 'source ~/github/romkatv/powerlevel10k/powerlevel10k.zsh-theme'
        create: yes

    - name: zsh-autosuggestions
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: ~/code/github/zsh-users/zsh-autosuggestions

    - name: Install zsh-autosuggestions into zshrc
      ansible.builtin.lineinfile:
        path: ~/.zshrc
        line: 'source ~/code/github/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh'
        create: yes

    - name: Clone dunst (for dunstify)
      git:
        repo: https://github.com/dunst-project/dunst
        version: master
        dest: ~/code/github/dunst-project/dunst

    - name: Build and install dunstify
      shell: which dunstify || (make dunstify && cp -f dunstify ~/bin/dunstify)
      args:
        chdir: ~/code/github/dunst-project/dunst

    - name: Emoji mode for rofi
      git:
        repo: https://github.com/nkoehring/rofiemoji
        version: master
        dest: ~/code/github/nkoehring/rofiemoji

    - name: dust (rust version of du -sh, easier to parse)
      shell: cargo install du-dust

    - name: git-delta ("better", contextual diff, see https://github.com/dandavison/delta)
      shell: cargo install git-delta

    - name: bat (cat with colors)
      shell: cargo install bat

    - name: fd (find with good performance and smarter syntax)
      shell: cargo install fd-find

    - name: xsv (cli util for dealing with csv)
      shell: cargo install xsv

    # install the native bitwarden client instead of the (broken) one in snap
    - name: bitwarden-rofi
      git:
        repo: https://github.com/chelmertz/bitwarden-rofi.git
        version: master
        dest: ~/code/github/chelmertz/bitwarden-rofi

    - name: Symlink bwmenu (bitwarden cli) into something on $PATH
      file:
        src: ~/code/github/chelmertz/bitwarden-rofi/bwmenu
        dest: ~/bin/bwmenu
        state: link

    - name: Symlink Xresources
      file:
        src: ~/code/github/chelmertz/dotfiles/.Xresources
        dest: ~/.Xresources
        state: link

    - name: Symlink .ideavimrc
      file:
        src: ~/code/github/chelmertz/dotfiles/.ideavimrc
        dest: ~/.ideavimrc
        state: link

    - name: uni (unicode tool for identifying/searching, used in rofi-binding)
      shell: go get arp242.net/uni

    - name: lazydocker (tui for managing docker)
      shell: go get github.com/jesseduffield/lazydocker

    - name: gopls (golang language server)
      shell: GO111MODULE=on go get golang.org/x/tools/gopls@latest

    - name: custom search engines for surfraw
      shell: mkdir -p ~/.config/surfraw/ && ln -sf ~/dotfiles/bookmarks ~/.config/surfraw/bookmarks

    - name: bash format
      shell: GO111MODULE=on go get mvdan.cc/sh/v3/cmd/shfmt

    # start fzf (fuzzy picker/list thing, kind of like rofi in the terminal)
    - name: "fzf: git"
      git:
        repo: https://github.com/junegunn/fzf.git
        version: master
        dest: ~/code/github/junegunn/fzf

    - name: "fzf: build & install"
      shell: make && make install && mv bin/fzf ~/bin/fzf
      args:
        chdir: ~/code/github/junegunn/fzf
    # end fzf

    # start sysz (tui with fuzzy matching for systemd interfaces, systemctl and journalctl)
    - name: "sysz: git"
      git:
        repo: https://github.com/joehillen/sysz.git
        version: master
        dest: ~/code/github/joehillen/sysz

    - name: "sysz: build & install"
      shell: make && install -m755 sysz ~/bin
      args:
        chdir: ~/code/github/joehillen/sysz
    # end sysz

    # fzf-docker
    - name: "fzf-docker: git"
      git:
        repo: https://github.com/chelmertz/fzf-docker.git
        version: master
        dest: ~/code/github/chelmertz/fzf-docker
    # end fzf-docker
