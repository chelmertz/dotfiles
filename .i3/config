set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:FontAwesome:style=regular, Source Code Pro 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86AudioNext exec --no-startup-id playerctl --player spotify next
bindsym XF86AudioPrev exec --no-startup-id playerctl --player spotify previous
bindsym XF86AudioPlay exec --no-startup-id playerctl --player spotify play-pause && pkill -SIGRTMIN+10 i3blocks

bindsym XF86MonBrightnessDown exec --no-startup-id ~/bin/bright down
bindsym XF86MonBrightnessUp exec --no-startup-id ~/bin/bright up

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym shift+F5 exec i3-sensible-terminal
#bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
#bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
#bindsym $mod+Shift+space focus mode_toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

assign [class="Firefox"] $ws2
assign [class="Google-chrome"] $ws2
assign [class="jetbrains-idea"] $ws3
assign [class="jetbrains-toolbox"] $ws10
assign [class="Slack"] $ws9
assign [class="Emacs"] $ws1
# generic name for Visual Studio Code
assign [class="Code"] $ws1
for_window [class="Microsoft Teams - Preview"] move to workspace $ws10
for_window [class="Yad"] floating enable
# xev, getting keycodes etc
for_window [title="Event Tester"] floating enable
# cannot use assign, see https://github.com/i3/i3/issues/2060 (prob the same above, for Teams)
for_window [class="Spotify"] move to workspace $ws10

for_window [instance="gedit"] floating enable;
for_window [instance="gedit"] move scratchpad; [instance="gedit"] scratchpad show; move position center; move scratchpad
bindsym Pause exec bwmenu --auto-lock -1 --clear 20
# "+" key on the far right
bindsym KP_Add [instance="gedit"] scratchpad show, resize set 1200 650

# Microsoft teams' notifications should float
# see https://i3wm.org/docs/userguide.html#command_criteria
for_window [window_type="notification"] floating enable

for_window [class=".*"] title_format " %title"

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

set_from_resource $monitor_primary monitor.primary "eDP1"
set_from_resource $monitor_secondary monitor.secondary "eDP1"

workspace $ws1 output $monitor_primary
workspace $ws2 output $monitor_primary
workspace $ws3 output $monitor_primary
workspace $ws4 output $monitor_secondary
workspace $ws5 output $monitor_primary
workspace $ws6 output $monitor_primary
workspace $ws7 output $monitor_primary
workspace $ws8 output $monitor_primary
workspace $ws9 output $monitor_primary
workspace $ws10 output $monitor_secondary

# section = ยง, left of 1 on my keyboard, search for "sect" in unicode rofi below to find that sign :)
bindsym Shift+section exec rofi -sidebar-mode -show ssh -matching fuzzy -modi "ssh"
bindsym section exec i3-sensible-terminal
bindsym Scroll_Lock exec ~/bin/rofi.sh
# my new laptop has a button I'm not gonna use for its intended purpose:
bindsym XF86Calculator exec ~/bin/rofi.sh
bindsym $mod+u exec ~/bin/rofi_uni.sh
bindsym $mod+p exec ~/bin/rofi_power.sh
bindsym $mod+t exec ~/bin/rofi_timer.sh
bindsym $mod+space exec ~/bin/rofi_surfraw.sh

#bindsym Shift+F4 exec /home/ch/code/gitlab/chelmertz/focus_trigger/focus-trigger.py
bindsym Print exec flameshot gui

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# I want to use the F-keys for changing workspaces, but when playing (or using htop), those keys needs to be unbound
mode "fkey" {
	bindsym $mod+m mode "default"; exec notify-send "fkey mode off (mod + m)"
	bindsym $mod+1 workspace number $ws1
	bindsym $mod+2 workspace number $ws2
	bindsym $mod+3 workspace number $ws3
	bindsym $mod+4 workspace number $ws4
	bindsym $mod+5 workspace number $ws5
	bindsym $mod+6 workspace number $ws6
	bindsym $mod+7 workspace number $ws7
	bindsym $mod+8 workspace number $ws8
	bindsym $mod+9 workspace number $ws9
	bindsym $mod+0 workspace number $ws10
}

bindsym $mod+m mode "fkey"; exec notify-send "fkey mode on (mod + m)"

bindsym F1 exec /home/ch/bin/ror.py Emacs "/home/ch/.emacs.d/bin/doom run" && workspace number $ws1
#bindsym F1 exec /home/ch/bin/ror.py Code /usr/bin/code; workspace number $ws1
bindsym F2 exec /home/ch/bin/ror.py Google-chrome /opt/google/chrome/chrome; workspace number $ws2
bindsym F3 workspace number $ws3
bindsym F4 workspace number $ws4
bindsym F5 workspace number $ws5
bindsym F6 workspace number $ws6
bindsym F7 workspace number $ws7
bindsym F8 workspace number $ws8
bindsym F9 workspace number $ws9
bindsym F10 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

bindsym $mod+x move workspace to output right

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
# needed to see apply i3blocks configuration changes
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        #status_command 2>/tmp/blocks.err i3blocks -vvv | tee /tmp/blocks.out
        tray_output $monitor_primary
        status_command i3blocks
        position top
        tray_padding 1
        separator_symbol " "
}

hide_edge_borders both

# exec_always because some things (like keyboard mappings) are reset
# when e.g. unplugging monitor, and a simple i3 reload solves it

exec_always --no-startup-id dropbox start
exec_always --no-startup-id copyq

# hold caps for ctrl modifier, press for escape
# inside .bashrc to make it execute (well, let's hope we open a new terminal)
# after sleep/lid is closed (known issue, it seems like, when googling)
exec_always --no-startup-id setxkbmap -layout se -option caps:ctrl_modifier
exec_always --no-startup-id xcape -e "Caps_Lock=Escape" -t 200
exec_always --no-startup-id feh --no-fehbg --bg-scale ~/Dropbox/desktop_bg.jpg
exec --no-startup-id autorandr -l $(autorandr --detected)
# turn on num look on boot
exec --no-startup-id xdotool key --clearmodifiers Num_Lock

exec --no-startup-id gedit ~/scratchpad.txt # for scratchpad

